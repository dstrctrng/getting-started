#!/bin/bash

#/ NAME
#/     push -- push a gem to a local, remote rubygems,geminabox repository
#/
#/ SYNOPSIS
#/     push --public gem
#/     push [--local|--private|--public] [gem...]

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"

# entry point
function main {
  nm_component="$1"; shift

  case "$nm_component" in 
    gem)
      if [[ "$FLAGS_public" = "$FLAGS_TRUE" ]]; then
        push_gem "$@"
      elif [[ "$FLAGS_private" = "$FLAGS_TRUE" ]]; then
        push_gem_private
      else
        logger_fatal "must specify --public to confirm a gem push to rubygems.org"
        exit 1
      fi
      ;;
    *)
      if [[ "$FLAGS_private" = "$FLAGS_TRUE" ]]; then
        push_gem_private "$1" "$@"
      else
        fatal_logger "must specify --private to push to a private repository"
      fi
      ;;
  esac
}

# push a gem locally 
function push_gem_private {
  if [[ "$#" = 0 ]]; then
    set +f
    local latest_gem="$(ls -td *.gem 2>&- | head -1)"
    push_gem_private "$latest_gem"
    set -f
  else
    gem inabox -g http://localhost:9292 "$@"
  fi
}

# push the latest gem to rubygems.org
function push_gem {
  set +f
  local latest_gem="$(ls -td *.gem 2>&- | head -1)"
  set -f
  
  if [[ -z "$latest_gem" ]]; then
    logger_fatal "no gems found"
    exit 1
  fi

  gem push "$latest_gem"
}

# define command line options:
#   var name, default, description, short option
DEFINE_boolean "private" "$FLAGS_TRUE" "push to a local, private geminabox"
DEFINE_boolean "shared" "$FLAGS_FALSE" "push to a shared, private geminabox"
DEFINE_boolean "public" "$FLAGS_FALSE" "push to rubygems.org"

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

if [[ "$#" < 1 ]]; then
  logger_fatal "missing component or gem(s)"
  exit 1
fi

# pass arguments to entry point
main "$@"
