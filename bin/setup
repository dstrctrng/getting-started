#!/bin/bash

#/ NAME
#/     setup -- create users with pancakes
#/
#/ SYNOPSIS
#/     setup user [name]

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"

# entry point
function main {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing component(s)"
    exit 1
  fi

  nm_component="$1"; shift

  case "$nm_component" in 
    user)
      setup_user "$@"
      ;;
    *)
      logger_fatal "dont know how to setup $nm_component"
      exit 1
      ;;
  esac
}

function osx_useradd {
  local nm_user=$1; shift
  local id_user=$1; shift

  local pth_user="/Users/$nm_user"

  sudo dscl . -create $pth_user
  sudo dscl . -create $pth_user UserShell /bin/bash
  sudo dscl . -create $pth_user UniqueID $id_user
  sudo dscl . -create $pth_user PrimaryGroupID "$FLAGS_groupid"
  sudo dscl . -create $pth_user NFSHomeDirectory $pth_user
  sudo mkdir -p $pth_user
}

function setup_user {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing shared username"
    exit 1
  fi

  local nm_shared=$1; shift

  local pth_shared="/Users/$nm_shared"

  osx_useradd $nm_shared "$FLAGS_userid"

  if [[ ! -d $pth_shared/.git && -n "$FLAGS_repo" ]]; then
    sudo git clone --recurse-submodules "$FLAGS_repo" $pth_shared
    sudo chown -R $nm_shared:$FLAGS_groupid $pth_shared
  else
    if [[ ! -d $pth_shared/.getting-started ]]; then
      sudo su - $name_shared -c "git clone https://github.com/HeSYINUvSBZfxqA/getting-started .getting-started"
    fi
  fi


  if [[ "$FLAGS_macports" = "$FLAGS_TRUE" ]]; then
    sudo ln -nfs $pth_shared/.macports /opt
  fi

  if [[ "$FLAGS_macports" = "$FLAGS_TRUE" || "$FLAGS_ubuntu" = "$FLAGS_TRUE" ]]; then
    sudo rsync -ia --no-group --no-owner --delete vault/. $pth_shared/vault/
    sudo chown -R $nm_shared:$FLAGS_groupid $pth_shared/vault/
  fi


  if [[ -d $pth_shared/.git ]]; then
    sudo su - $nm_shared -c "git pull"
    sudo su - $nm_shared -c "git submodule update --init --recursive"
  else
    sudo su - $nm_shared -c "cd .getting-started; git pull origin master"
  fi
  
  if [[ "$FLAGS_macports" = "$FLAGS_TRUE" ]]; then
    sudo xcode-'select' -switch /Applications/Xcode.app
    if [[ ! -d $pth_shared/.macports ]]; then
      sudo su - $name_shared -c "git clone https://github.com/HeSYINUvSBZfxqA/macports .macports"
    fi
    sudo su - $nm_shared -c "source .bash_profile; cd .getting-started; bin/build macports"
  fi

  if [[ "$FLAGS_ubuntu" = "$FLAGS_TRUE" ]]; then
    if [[ ! -d $pth_shared/.ubuntu ]]; then
      sudo su - $name_shared -c "git clone https://github.com/HeSYINUvSBZfxqA/ubuntu .ubuntu"
    fi
    sudo su - $nm_shared -c "source .bash_profile; cd .getting-started; bin/build ubuntu"
  fi

  if [[ "$FLAGS_ruby" = "$FLAGS_TRUE" ]]; then
    sudo su - $nm_shared -c "source .bash_profile; cd .getting-started; bin/build ruby"
  fi
}

# define command line options:
#   var name, default, description, short option
DEFINE_boolean 'macports' "$FLAGS_FALSE" 'install macports packages' 'm'
DEFINE_boolean 'ubuntu' "$FLAGS_FALSE" 'install ubuntu guests' 'U'
DEFINE_boolean 'ruby' "$FLAGS_FALSE" 'install rvm rubies' 'R'
DEFINE_integer 'userid' "502" 'user id' 'u'
DEFINE_integer 'groupid' "20" 'group id' 'g'
DEFINE_string 'repo' "https://github.com/HeSYINUvSBZfxqA/pancake-normal" 'home repo' 'r'

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# pass arguments to entry point
main "$@"

