#!/bin/bash

#/ NAME
#/     setup -- one time setup for pancake
#/
#/ SYNOPSIS
#/     setup pancake

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$0")/.." && pwd -P)"

# load a meat library
source "$shome/bin/_prime" "$@"
MACPORTS_ROOT="$shome"
source $shome/.profile

# entry point
function main {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing component(s)"
    exit 1
  fi

  nm_component="$1"; shift

  case "$nm_component" in 
    pancake)
      setup_pancake "$@"
      ;;
    *)
      logger_fatal "dont know how to setup $nm_component"
      exit 1
      ;;
  esac
}

function osx_useradd {
  local nm_user=$1; shift
  local id_user=$1; shift

  local pth_user="/Users/$nm_user"

  sudo dscl . -create $pth_user
  sudo dscl . -create $pth_user UserShell /bin/bash
  sudo dscl . -create $pth_user UniqueID $id_user
  sudo dscl . -create $pth_user PrimaryGroupID 20 # staff TODO
  sudo dscl . -create $pth_user NFSHomeDirectory $pth_user
  sudo mkdir -p $pth_user
}

function setup_pancake {
  if [[ "$#" < 1 ]]; then
    logger_fatal "missing shared username"
    exit 1
  fi
  if [[ "$#" < 2 ]]; then
    logger_fatal "missing developer username"
    exit 1
  fi

  local nm_shared=$1; shift
  local nm_developer=$1; shift

  local pth_shared="/Users/$nm_shared"

  osx-useradd $nm_shared 502 # TODO
  osx-useradd $nm_developer 503 # TODO

  sudo git clone --recurse-submodules https://github.com/HeSYINUvSBZfxqA/pancake $pth_shared
  sudo ln -nfs $pth_shared/.macports /opt
  sudo rsync -ia vault/. $pth_shared/vault/
  sudo chown -R $nm_shared:staff $pth_shared # TODO
}

# define command line options:
#   var name, default, description, short option

# parse the command-line
parse_command_line "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# pass arguments to entry point
main "$@"

